/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.db.dao;

import com.mybillr.db.dto.*;
import com.mybillr.db.exceptions.*;

public interface NewsDao
{
	/** 
	 * Inserts a new row in the news table.
	 */
	public NewsPk insert(News dto) throws NewsDaoException;

	/** 
	 * Updates a single row in the news table.
	 */
	public void update(NewsPk pk, News dto) throws NewsDaoException;

	/** 
	 * Deletes a single row in the news table.
	 */
	public void delete(NewsPk pk) throws NewsDaoException;

	/** 
	 * Returns the rows from the news table that matches the specified primary-key value.
	 */
	public News findByPrimaryKey(NewsPk pk) throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the criteria 'id = :id'.
	 */
	public News findByPrimaryKey(int id) throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the criteria ''.
	 */
	public News[] findAll() throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the criteria 'id = :id'.
	 */
	public News[] findWhereIdEquals(int id) throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the criteria 'title = :title'.
	 */
	public News[] findWhereTitleEquals(String title) throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the criteria 'content = :content'.
	 */
	public News[] findWhereContentEquals(String content) throws NewsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the news table that match the specified arbitrary SQL statement
	 */
	public News[] findByDynamicSelect(String sql, Object[] sqlParams) throws NewsDaoException;

	/** 
	 * Returns all rows from the news table that match the specified arbitrary SQL statement
	 */
	public News[] findByDynamicWhere(String sql, Object[] sqlParams) throws NewsDaoException;

}
