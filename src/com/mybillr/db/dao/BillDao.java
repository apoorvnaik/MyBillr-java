/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.db.dao;

import com.mybillr.db.dto.*;
import com.mybillr.db.exceptions.*;

public interface BillDao
{
	/** 
	 * Inserts a new row in the bill table.
	 */
	public BillPk insert(Bill dto) throws BillDaoException;

	/** 
	 * Updates a single row in the bill table.
	 */
	public void update(BillPk pk, Bill dto) throws BillDaoException;

	/** 
	 * Deletes a single row in the bill table.
	 */
	public void delete(BillPk pk) throws BillDaoException;

	/** 
	 * Returns the rows from the bill table that matches the specified primary-key value.
	 */
	public Bill findByPrimaryKey(BillPk pk) throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the criteria 'id = :id'.
	 */
	public Bill findByPrimaryKey(int id) throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the criteria ''.
	 */
	public Bill[] findAll() throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the criteria 'id = :id'.
	 */
	public Bill[] findWhereIdEquals(int id) throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the criteria 'name = :name'.
	 */
	public Bill[] findWhereNameEquals(String name) throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the criteria 'total = :total'.
	 */
	public Bill[] findWhereTotalEquals(long total) throws BillDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the bill table that match the specified arbitrary SQL statement
	 */
	public Bill[] findByDynamicSelect(String sql, Object[] sqlParams) throws BillDaoException;

	/** 
	 * Returns all rows from the bill table that match the specified arbitrary SQL statement
	 */
	public Bill[] findByDynamicWhere(String sql, Object[] sqlParams) throws BillDaoException;

}
