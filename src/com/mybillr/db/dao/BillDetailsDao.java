/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.db.dao;

import com.mybillr.db.dto.*;
import com.mybillr.db.exceptions.*;

public interface BillDetailsDao
{
	/** 
	 * Inserts a new row in the bill_details table.
	 */
	public BillDetailsPk insert(BillDetails dto) throws BillDetailsDaoException;

	/** 
	 * Updates a single row in the bill_details table.
	 */
	public void update(BillDetailsPk pk, BillDetails dto) throws BillDetailsDaoException;

	/** 
	 * Deletes a single row in the bill_details table.
	 */
	public void delete(BillDetailsPk pk) throws BillDetailsDaoException;

	/** 
	 * Returns the rows from the bill_details table that matches the specified primary-key value.
	 */
	public BillDetails findByPrimaryKey(BillDetailsPk pk) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'bill_id = :billId AND user_id = :userId'.
	 */
	public BillDetails findByPrimaryKey(int billId, int userId) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria ''.
	 */
	public BillDetails[] findAll() throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'bill_id = :billId'.
	 */
	public BillDetails[] findByBill(int billId) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'user_id = :userId'.
	 */
	public BillDetails[] findByUser(int userId) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'bill_id = :billId'.
	 */
	public BillDetails[] findWhereBillIdEquals(int billId) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'user_id = :userId'.
	 */
	public BillDetails[] findWhereUserIdEquals(int userId) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'item_name = :itemName'.
	 */
	public BillDetails[] findWhereItemNameEquals(String itemName) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'share = :share'.
	 */
	public BillDetails[] findWhereShareEquals(long share) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the criteria 'amount = :amount'.
	 */
	public BillDetails[] findWhereAmountEquals(long amount) throws BillDetailsDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the bill_details table that match the specified arbitrary SQL statement
	 */
	public BillDetails[] findByDynamicSelect(String sql, Object[] sqlParams) throws BillDetailsDaoException;

	/** 
	 * Returns all rows from the bill_details table that match the specified arbitrary SQL statement
	 */
	public BillDetails[] findByDynamicWhere(String sql, Object[] sqlParams) throws BillDetailsDaoException;

}
