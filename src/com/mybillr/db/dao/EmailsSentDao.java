/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.db.dao;

import com.mybillr.db.dto.*;
import com.mybillr.db.exceptions.*;

public interface EmailsSentDao
{
	/** 
	 * Inserts a new row in the emails_sent table.
	 */
	public EmailsSentPk insert(EmailsSent dto) throws EmailsSentDaoException;

	/** 
	 * Updates a single row in the emails_sent table.
	 */
	public void update(EmailsSentPk pk, EmailsSent dto) throws EmailsSentDaoException;

	/** 
	 * Deletes a single row in the emails_sent table.
	 */
	public void delete(EmailsSentPk pk) throws EmailsSentDaoException;

	/** 
	 * Returns the rows from the emails_sent table that matches the specified primary-key value.
	 */
	public EmailsSent findByPrimaryKey(EmailsSentPk pk) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'id = :id'.
	 */
	public EmailsSent findByPrimaryKey(int id) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria ''.
	 */
	public EmailsSent[] findAll() throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'sender_id = :senderId'.
	 */
	public EmailsSent[] findByUser(int senderId) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'receiver_id = :receiverId'.
	 */
	public EmailsSent[] findByUser2(int receiverId) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'id = :id'.
	 */
	public EmailsSent[] findWhereIdEquals(int id) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'sender_id = :senderId'.
	 */
	public EmailsSent[] findWhereSenderIdEquals(int senderId) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'receiver_id = :receiverId'.
	 */
	public EmailsSent[] findWhereReceiverIdEquals(int receiverId) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'subject = :subject'.
	 */
	public EmailsSent[] findWhereSubjectEquals(String subject) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the criteria 'content = :content'.
	 */
	public EmailsSent[] findWhereContentEquals(String content) throws EmailsSentDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the emails_sent table that match the specified arbitrary SQL statement
	 */
	public EmailsSent[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmailsSentDaoException;

	/** 
	 * Returns all rows from the emails_sent table that match the specified arbitrary SQL statement
	 */
	public EmailsSent[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmailsSentDaoException;

}
